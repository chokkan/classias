dnl $Id$
dnl
dnl
dnl Exported and configured variables:
dnl CXXFLAGS
dnl LDFLAGS
dnl INCLUDES


dnl ------------------------------------------------------------------
dnl Initialization for autoconf
dnl ------------------------------------------------------------------
AC_PREREQ(2.59)
AC_INIT
AC_CONFIG_SRCDIR([frontend/train/main.cpp])


dnl ------------------------------------------------------------------
dnl Checks for system
dnl ------------------------------------------------------------------
AC_CANONICAL_HOST
AC_AIX
AC_GNU_SOURCE
AC_ISC_POSIX
AC_MINIX


dnl ------------------------------------------------------------------
dnl Initialization for automake
dnl ------------------------------------------------------------------
AM_INIT_AUTOMAKE(classias, 1.1)
AC_CONFIG_HEADERS(config.h)
AM_MAINTAINER_MODE


dnl ------------------------------------------------------------------
dnl Checks for program
dnl ------------------------------------------------------------------
AC_PROG_CXX
AC_PROG_INSTALL
AC_PROG_LN_S
AC_EXEEXT
AC_LANG_CPLUSPLUS

dnl ------------------------------------------------------------------
dnl Initialization for variables
dnl ------------------------------------------------------------------
BOOST_INCLUDES=""
BOOST_LDFLAGS=""
BOOST_POSTFIX=""

dnl ------------------------------------------------------------------
dnl Checks for header files.
dnl ------------------------------------------------------------------
AC_HEADER_STDC
AC_CHECK_HEADERS(stdint.h)


dnl ------------------------------------------------------------------
dnl Checks for typedefs, structures, and compiler characteristics.
dnl ------------------------------------------------------------------
AC_C_CONST
AC_CHECK_SIZEOF
AC_TYPE_SIZE_T
AC_STRUCT_TM
AC_CHECK_TYPES([uint8_t, uint16_t, uint32_t])

dnl ------------------------------------------------------------------
dnl Checks for building binaries with static libraries linked.
dnl ------------------------------------------------------------------
AC_ARG_ENABLE(all-static,
  AC_HELP_STRING([--enable-all-static],
                 [Build completely static (standalone) binaries.]),
  [
    if test "$enableval" = "yes" ; then
      LDFLAGS="-static $LDFLAGS"
    fi
])

dnl ------------------------------------------------------------------
dnl Checks for debugging mode
dnl ------------------------------------------------------------------
AC_ARG_ENABLE(
  debug,
  [AS_HELP_STRING([--enable-debug],[Turn on debugging])]
)

if test "x$enable_debug" = "xyes"; then
   CXXFLAGS="-DDEBUG -O -g ${CXXFLAGS}"
else
   CXXFLAGS="-O3 -ffast-math ${CXXFLAGS}"
fi

dnl ------------------------------------------------------------------
dnl Checks for profiling mode
dnl ------------------------------------------------------------------
AC_ARG_ENABLE(
  profile,
  [AS_HELP_STRING([--enable-profile],[Turn on profiling])]
)

if test "x$enable_profile" = "xyes"; then
   CXXFLAGS="-DPROFILE -pg ${CXXFLAGS}"
fi


dnl ------------------------------------------------------------------
dnl Checks for library functions.
dnl ------------------------------------------------------------------

dnl Check for math library
AC_ARG_WITH(
	liblbfgs,
	[AS_HELP_STRING([--with-liblbfgs=DIR],[liblbfgs directory])],
	[INCLUDES="-I${withval}/include ${INCLUDES}"; LDFLAGS="-L${withval}/lib ${LDFLAGS}"]
)
dnl AC_ARG_WITH(
dnl 	boost,
dnl 	[AS_HELP_STRING([--with-boost=DIR],[boost directory])],
dnl 	[INCLUDES="-I${withval}/include ${INCLUDES}"; LDFLAGS="-L${withval}/lib ${LDFLAGS}"]
dnl )
AC_ARG_WITH(
	boost-include,
	[AS_HELP_STRING([--with-boost-include=DIR],[boost include directory])],
	[INCLUDES="-I${withval} ${INCLUDES}"]
)
dnl AC_ARG_WITH(
dnl 	boost-lib,
dnl 	[AS_HELP_STRING([--with-boost-lib=DIR],[boost library directory])],
dnl 	[LDFLAGS="-L${withval} ${LDFLAGS}"]
dnl )
dnl AC_ARG_WITH(
dnl 	boost-postfix,
dnl 	[AS_HELP_STRING([--with-boost-postfix=STR],[boost postfix])],
dnl 	[BOOST_POSTFIX="${withval}"]
dnl )

CPPFLAGS_saved="${CPPFLAGS}"
CPPFLAGS="${INCLUDES} ${CPPFLAGS}"

AC_CHECK_LIB(m, rand)
AC_CHECK_LIB(pthread, pthread_create)

AC_CHECK_HEADERS(lbfgs.h)
AC_CHECK_LIB(lbfgs, lbfgs)

AC_CHECK_HEADERS(tr1/unordered_map)
AC_CHECK_HEADERS(boost/unordered_map.hpp)

dnl AC_CHECK_HEADERS(boost/regex.hpp)
dnl AC_CHECK_LIB(boost_regex${BOOST_POSTFIX}, main)

CPPFLAGS="${CPPFLAGS_saved}"
INCLUDES="-I\$(top_srcdir) -I\$(top_srcdir)/include -I\$(srcdir) ${INCLUDES}"

dnl ------------------------------------------------------------------
dnl Export variables
dnl ------------------------------------------------------------------
AC_SUBST(CXXFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(INCLUDES)

dnl ------------------------------------------------------------------
dnl Output the configure results.
dnl ------------------------------------------------------------------
AC_CONFIG_FILES(Makefile genbinary.sh include/Makefile include/classias/Makefile include/classias/train/Makefile include/classias/classify/Makefile include/classias/classify/linear/Makefile sample/Makefile frontend/Makefile frontend/train/Makefile frontend/tag/Makefile win32/Makefile)
AC_OUTPUT
